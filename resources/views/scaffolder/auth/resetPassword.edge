import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'
import { rules, schema } from '@ioc:Adonis/Core/Validator'
import { passwordRegex } from 'App/Controllers/Http/auth/register'
import User from 'App/Models/User'

const resetPasswordSchema = schema.create({
  email: schema.string({ trim: true }, [rules.email()]),
  code: schema.string({ trim: true }),
  newPassword: schema.string({ trim: true }, [rules.confirmed(), rules.regex(passwordRegex)]),
})

export const resetPassword = async ({ request }: HttpContextContract) => {
  const { email, code, newPassword } = await request.validate({ schema: resetPasswordSchema })

  const user = await User.query().where({ email, resetPasswordToken: code }).firstOrFail()

  user.password = newPassword

  await user.save()

  return { message: 'password updated' }
}

