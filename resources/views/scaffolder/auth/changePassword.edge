import Hash from '@ioc:Adonis/Core/Hash'
import { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'
import { rules, schema } from '@ioc:Adonis/Core/Validator'
import { passwordRegex } from 'App/Controllers/Http/auth/register'

const changePasswordSchema = schema.create({
  oldPassword: schema.string([rules.trim()]),
  newPassword: schema.string([rules.trim(), rules.regex(passwordRegex)]),
})

export const changePassword = async ({ auth, request, response }: HttpContextContract) => {
  const user = auth.user!

  const { newPassword, oldPassword } = await request.validate({
    schema: changePasswordSchema,
  })

  const correctPassword = await Hash.verify(user.password, oldPassword)

  if (!correctPassword) {
    return response.badRequest({ message: 'old password is incorrect' })
  }

  user.password = newPassword

  await user.save()

  return { message: 'password updated' }
}

